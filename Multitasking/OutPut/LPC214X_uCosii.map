Component: ARM Compiler 5.06 update 1 (build 61) Tool: armlink [4d35a8]

==============================================================================

Section Cross References

    target.o(.text) refers to os_core.o(.text) for OSTimeTick
    target.o(.text) refers to rand.o(.text) for srand
    target.o(.text) refers to irq.o(IRQ) for IRQ_Handler
    main.o(.text) refers to aeabi_sdiv.o(.text) for __aeabi_idivmod
    main.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    main.o(.text) refers to os_time.o(.text) for OSTimeDly
    main.o(.text) refers to target.o(.text) for TargetInit
    main.o(.text) refers to os_core.o(.text) for OSInit
    main.o(.text) refers to os_task.o(.text) for OSTaskCreate
    main.o(.text) refers to main.o(.bss) for TaskStk0
    irq.o(IRQ) refers to target.o(.text) for IRQ_Exception
    irq.o(IRQ) refers to os_core.o(.text) for OSIntExit
    irq.o(IRQ) refers to os_core.o(.data) for OSIntNesting
    irq.o(IRQ) refers to startup.o(Stacks) for StackUsr
    irq.o(IRQ) refers to os_cpu_c.o(.data) for OsEnterSum
    irq.o(IRQ) refers to os_cpu_a.o(subr) for OSIntCtxSw
    startup.o(vectors) refers to os_cpu_a.o(subr) for SoftwareInterrupt
    startup.o(vectors) refers to target.o(.text) for FIQ_Exception
    startup.o(vectors) refers to __main.o(!!!main) for __main
    startup.o(vectors) refers to startup.o(MyStacks) for IrqStackSpace
    startup.o(vectors) refers to startup.o(Stacks) for StackUsr
    startup.o(vectors) refers to startup.o(Heap) for bottom_of_heap
    os_core.o(.text) refers to os_time.o(.text) for OSTimeDly
    os_core.o(.text) refers to aeabi_sdiv.o(.text_udiv) for __aeabi_uidivmod
    os_core.o(.text) refers to os_cpu_c.o(.text) for OSTaskStatHook
    os_core.o(.text) refers to os_task.o(.text) for OSTaskCreateExt
    os_core.o(.text) refers to os_flag.o(.text) for OS_FlagInit
    os_core.o(.text) refers to os_mem.o(.text) for OS_MemInit
    os_core.o(.text) refers to os_q.o(.text) for OS_QInit
    os_core.o(.text) refers to os_core.o(.data) for OSStatRdy
    os_core.o(.text) refers to os_core.o(.bss) for OSTaskStatStk
    os_core.o(.text) refers to os_core.o(.constdata) for OSUnMapTbl
    os_flag.o(.text) refers to os_core.o(.text) for OS_Sched
    os_flag.o(.text) refers to os_core.o(.data) for OSIntNesting
    os_flag.o(.text) refers to os_core.o(.bss) for OSFlagTbl
    os_mbox.o(.text) refers to os_core.o(.text) for OS_EventWaitListInit
    os_mbox.o(.text) refers to os_core.o(.data) for OSIntNesting
    os_mem.o(.text) refers to os_core.o(.data) for OSMemFreeList
    os_mem.o(.text) refers to os_core.o(.bss) for OSMemTbl
    os_mutex.o(.text) refers to os_core.o(.text) for OS_EventWaitListInit
    os_mutex.o(.text) refers to os_core.o(.data) for OSIntNesting
    os_mutex.o(.text) refers to os_core.o(.bss) for OSTCBPrioTbl
    os_mutex.o(.text) refers to os_core.o(.constdata) for OSMapTbl
    os_q.o(.text) refers to os_core.o(.text) for OS_EventWaitListInit
    os_q.o(.text) refers to os_core.o(.data) for OSIntNesting
    os_q.o(.text) refers to os_core.o(.bss) for OSQTbl
    os_sem.o(.text) refers to os_core.o(.text) for OS_EventWaitListInit
    os_sem.o(.text) refers to os_core.o(.data) for OSIntNesting
    os_task.o(.text) refers to os_core.o(.text) for OS_Sched
    os_task.o(.text) refers to os_cpu_c.o(.text) for OSTaskStkInit
    os_task.o(.text) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    os_task.o(.text) refers to os_flag.o(.text) for OS_FlagUnlink
    os_task.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    os_task.o(.text) refers to os_core.o(.bss) for OSTCBPrioTbl
    os_task.o(.text) refers to os_core.o(.constdata) for OSMapTbl
    os_task.o(.text) refers to os_core.o(.data) for OSTCBCur
    os_time.o(.text) refers to os_core.o(.text) for OS_Sched
    os_time.o(.text) refers to aeabi_sdiv.o(.text_udiv) for __aeabi_uidivmod
    os_time.o(.text) refers to os_core.o(.data) for OSTCBCur
    os_time.o(.text) refers to os_core.o(.bss) for OSTCBPrioTbl
    os_cpu_c.o(.text) refers to os_cpu_c.o(.data) for OsEnterSum
    os_cpu_c.o(.text) refers to os_core.o(.bss) for OSTCBPrioTbl
    os_cpu_a.o(subr) refers to os_cpu_c.o(.text) for SWI_Exception
    os_cpu_a.o(subr) refers to os_cpu_a.o(SWIStacks) for SvcStackSpace
    os_cpu_a.o(subr) refers to os_cpu_c.o(.data) for OsEnterSum
    os_cpu_a.o(subr) refers to os_core.o(.data) for OSTCBCur
    rand.o(.emb_text) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000D) for __rt_lib_init_rand_2
    rand.o(.emb_text) refers to rand.o(.text) for _rand_init
    rand.o(.emb_text) refers to rand.o(.bss) for _random_number_data
    rand.o(.text) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000D) for __rt_lib_init_rand_2
    rand.o(.text) refers to rand.o(.bss) for .bss
    rand.o(.bss) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000D) for __rt_lib_init_rand_2
    aeabi_sdiv.o(.text_udiv) refers to aeabi_sdiv.o(.text) for __arm_div2
    aeabi_sdiv_div0.o(.text_udiv) refers to aeabi_sdiv_div0.o(.text) for __arm_div2
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000009) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    aeabi_idiv0_sigfpe.o(.text) refers to startup.o(vectors) for __rt_div0
    libinit2.o(.ARM.Collect$$libinit$$00000001) refers to fpinit.o(x$fpl$fpinit) for _fp_init
    libinit2.o(.ARM.Collect$$libinit$$0000000D) refers (Weak) to rand.o(.text) for _rand_init
    libinit2.o(.ARM.Collect$$libinit$$00000010) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000026) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000027) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to boardinit2.o(.text) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(.text) for main
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup.o(vectors) for __user_initial_stackheap
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002C) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000002) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000A) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000011) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    __raise.o(.text) refers to __raise.o(i.__ARM_common_call_via_r2) for __ARM_common_call_via_r2
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing os_mbox.o(.text), (1348 bytes).
    Removing os_mutex.o(.text), (2220 bytes).
    Removing os_sem.o(.text), (1116 bytes).

3 unused section(s) (total 4684 bytes) removed from the image.

==============================================================================

Adding Veneers to the image

    Adding AT veneer (8 bytes, Inline) for call to '__rt_lib_init' from __rtentry2.o(.ARM.Collect$$rtentry$$0000000A).
    Adding AT veneer (8 bytes, Inline) for call to '__rt_lib_shutdown' from rtexit2.o(.ARM.Collect$$rtexit$$00000003).
    Adding TA veneer (4 bytes, Inline) for call to '__rt_exit' from exit.o(.text).
    Adding AT veneer (8 bytes, Inline) for call to 'srand' from target.o(.text).
    Adding AT veneer (8 bytes, Inline) for call to '_sys_exit' from rtexit2.o(.ARM.Collect$$rtexit$$00000004).

5 Veneer(s) (total 36 bytes) added to the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    vectors                                  0x00000000   Section      192  startup.o(vectors)
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit2.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_copy.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_idiv0_sigfpe.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_idiv0.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdiv_div0.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdiv.o ABSOLUTE
    ../clib/divrt.s                          0x00000000   Number         0  divrt_7tdmi_div0.o ABSOLUTE
    ../clib/divrt.s                          0x00000000   Number         0  divrt_7tdmi.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr_w.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  rand.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  rand.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    APP\IRQ.s                                0x00000000   Number         0  irq.o ABSOLUTE
    APP\Startup.s                            0x00000000   Number         0  startup.o ABSOLUTE
    APP\main.c                               0x00000000   Number         0  main.o ABSOLUTE
    APP\target.c                             0x00000000   Number         0  target.o ABSOLUTE
    ARM\Os_cpu_a.s                           0x00000000   Number         0  os_cpu_a.o ABSOLUTE
    ARM\Os_cpu_c.c                           0x00000000   Number         0  os_cpu_c.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    uCosii\OS_CORE.C                         0x00000000   Number         0  os_core.o ABSOLUTE
    uCosii\OS_FLAG.C                         0x00000000   Number         0  os_flag.o ABSOLUTE
    uCosii\OS_MBOX.C                         0x00000000   Number         0  os_mbox.o ABSOLUTE
    uCosii\OS_MEM.C                          0x00000000   Number         0  os_mem.o ABSOLUTE
    uCosii\OS_MUTEX.C                        0x00000000   Number         0  os_mutex.o ABSOLUTE
    uCosii\OS_Q.C                            0x00000000   Number         0  os_q.o ABSOLUTE
    uCosii\OS_SEM.C                          0x00000000   Number         0  os_sem.o ABSOLUTE
    uCosii\OS_TASK.C                         0x00000000   Number         0  os_task.o ABSOLUTE
    uCosii\OS_TIME.C                         0x00000000   Number         0  os_time.o ABSOLUTE
    Undefined                                0x00000040   ARM Code       0  startup.o(vectors)
    PrefetchAbort                            0x00000044   ARM Code       0  startup.o(vectors)
    DataAbort                                0x00000048   ARM Code       0  startup.o(vectors)
    FIQ_Handler                              0x0000004c   ARM Code       0  startup.o(vectors)
    ResetInit                                0x00000090   ARM Code       0  startup.o(vectors)
    !!!main                                  0x000000c0   Section        8  __main.o(!!!main)
    !!!scatter                               0x000000c8   Section       60  __scatter.o(!!!scatter)
    !!handler_copy                           0x00000104   Section       40  __scatter_copy.o(!!handler_copy)
    !!handler_zi                             0x0000012c   Section       44  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x00000160   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000002          0x00000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    .ARM.Collect$$libinit$$00000004          0x00000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$0000000A          0x00000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    .ARM.Collect$$libinit$$0000000C          0x00000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000D          0x00000162   Section        4  libinit2.o(.ARM.Collect$$libinit$$0000000D)
    .ARM.Collect$$libinit$$0000000E          0x00000166   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000011          0x00000166   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    .ARM.Collect$$libinit$$00000013          0x00000166   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x00000166   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x00000166   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x00000166   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x00000166   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x00000166   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x00000166   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x00000166   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x00000166   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x00000166   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$0000002C          0x00000166   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    .ARM.Collect$$libinit$$0000002E          0x00000166   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x00000166   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x00000166   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000033          0x00000166   Section       12  libinit2.o(.ARM.Collect$$libinit$$00000033)
    .ARM.Collect$$libshutdown$$00000000      0x0000017c   Section        4  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x00000180   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x00000180   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x00000180   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x00000180   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x00000180   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x00000180   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x00000180   Section        6  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x00000188   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x00000188   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x00000188   Section        8  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000009          0x00000190   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    .ARM.Collect$$rtentry$$0000000A          0x00000190   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x00000194   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x00000194   Section       40  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x000001c0   Section        4  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x000001c4   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x000001c4   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x000001c8   Section        8  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    .text                                    0x000001d0   Section        0  target.o(.text)
    .text                                    0x000003a0   Section        0  main.o(.text)
    .text                                    0x000007c4   Section        0  os_core.o(.text)
    OS_InitTaskStat                          0x0000089c   ARM Code      76  os_core.o(.text)
    OS_InitTaskIdle                          0x00000914   ARM Code      76  os_core.o(.text)
    OS_InitEventList                         0x00000960   ARM Code      84  os_core.o(.text)
    OS_InitTCBList                           0x000009b4   ARM Code     116  os_core.o(.text)
    OS_InitRdyList                           0x00000a28   ARM Code      92  os_core.o(.text)
    OS_InitMisc                              0x00000a84   ARM Code      88  os_core.o(.text)
    .text                                    0x00001358   Section        0  os_flag.o(.text)
    OS_FlagTaskRdy                           0x000015f8   ARM Code     140  os_flag.o(.text)
    OS_FlagBlock                             0x000017dc   ARM Code     224  os_flag.o(.text)
    .text                                    0x00001ea8   Section        0  os_mem.o(.text)
    .text                                    0x00002184   Section        0  os_q.o(.text)
    .text                                    0x00002a40   Section        0  os_task.o(.text)
    .text                                    0x000033dc   Section        0  os_time.o(.text)
    .text                                    0x00003668   Section        0  os_cpu_c.o(.text)
    .text                                    0x000038fc   Section        0  rand.o(.text)
    .text                                    0x0000393c   Section      100  rt_memcpy_w.o(.text)
    .text                                    0x000039a0   Section       84  rt_memclr_w.o(.text)
    .text                                    0x000039f4   Section      384  aeabi_sdiv.o(.text)
    __arm_div8                               0x00003a20   ARM Code       0  aeabi_sdiv.o(.text)
    __arm_div5                               0x00003a44   ARM Code       0  aeabi_sdiv.o(.text)
    __arm_div2                               0x00003a68   ARM Code       0  aeabi_sdiv.o(.text)
    __arm_div_large                          0x00003aa4   ARM Code       0  aeabi_sdiv.o(.text)
    .text                                    0x00003b74   Section       96  sys_stackheap_outer.o(.text)
    .text                                    0x00003bd4   Section        0  exit.o(.text)
    .text                                    0x00003be8   Section       12  libspace.o(.text)
    .text                                    0x00003bf4   Section        4  use_no_semi.o(.text)
    .text                                    0x00003bf8   Section        0  indicate_semi.o(.text)
    .text                                    0x00003c00   Section        0  sys_exit.o(.text)
    .text_udiv                               0x00003c0c   Section       36  aeabi_sdiv.o(.text_udiv)
    IRQ                                      0x00003c30   Section      272  irq.o(IRQ)
    subr                                     0x00003d40   Section      272  os_cpu_a.o(subr)
    .constdata                               0x00003e50   Section      264  os_core.o(.constdata)
    .data                                    0x40000000   Section       68  os_core.o(.data)
    .data                                    0x40000044   Section        4  os_cpu_c.o(.data)
    .bss                                     0x40000048   Section     1200  main.o(.bss)
    .bss                                     0x400004f8   Section     5056  os_core.o(.bss)
    .bss                                     0x400018b8   Section      228  rand.o(.bss)
    .bss                                     0x4000199c   Section       96  libspace.o(.bss)
    MyStacks                                 0x400019fc   Section      288  startup.o(MyStacks)
    IrqStackSpace                            0x400019fc   Data         288  startup.o(MyStacks)
    SWIStacks                                0x40001b1c   Section      128  os_cpu_a.o(SWIStacks)
    AbtStackSpace                            0x40001b1c   Data           0  startup.o(MyStacks)
    FiqStackSpace                            0x40001b1c   Data           0  startup.o(MyStacks)
    SvcStackSpace                            0x40001b1c   Data         128  os_cpu_a.o(SWIStacks)
    UndtStackSpace                           0x40001b1c   Data           0  startup.o(MyStacks)
    Heap                                     0x40001b9c   Section        1  startup.o(Heap)
    Stacks                                   0x40002000   Section        1  startup.o(Stacks)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv1$ARM_ISAv4$S$PE$A:L22$X:L11$S22$IEEE1$IW$USESV6$~STKCKD$USESV7$~SHL$OSPACE$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    Reset                                    0x00000000   ARM Code       0  startup.o(vectors)
    __ARM_use_no_argv                        0x00000000   Number         0  main.o ABSOLUTE
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __user_initial_stackheap                 0x0000009c   ARM Code       0  startup.o(vectors)
    __rt_div0                                0x000000a4   ARM Code       0  startup.o(vectors)
    __main                                   0x000000c0   ARM Code       8  __main.o(!!!main)
    __scatterload                            0x000000c8   ARM Code       0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x000000c8   ARM Code      52  __scatter.o(!!!scatter)
    __scatterload_null                       0x000000dc   ARM Code       0  __scatter.o(!!!scatter)
    __scatterload_copy                       0x00000104   ARM Code      40  __scatter_copy.o(!!handler_copy)
    __scatterload_zeroinit                   0x0000012c   ARM Code      44  __scatter_zi.o(!!handler_zi)
    Inline ARM to Thumb Veneer to __rt_lib_init 0x00000158   ARM Code       8  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init                            0x00000161   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_fp_1                       0x00000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    __rt_lib_init_heap_1                     0x00000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    __rt_lib_init_preinit_1                  0x00000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_rand_2                     0x00000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000D)
    __rt_lib_init_user_alloc_1               0x00000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_init_alloca_1                   0x00000167   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_argv_1                     0x00000167   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    __rt_lib_init_atexit_1                   0x00000167   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_clock_1                    0x00000167   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_cpp_1                      0x00000167   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_exceptions_1               0x00000167   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_fp_trap_1                  0x00000167   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_getenv_1                   0x00000167   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_lc_collate_1               0x00000167   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    __rt_lib_init_lc_ctype_1                 0x00000167   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_monetary_1              0x00000167   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_numeric_1               0x00000167   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_time_1                  0x00000167   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_rand_1                     0x00000167   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_init_return                     0x00000167   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000033)
    __rt_lib_init_signal_1                   0x00000167   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_stdio_1                    0x00000167   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    Inline ARM to Thumb Veneer to __rt_lib_shutdown 0x00000174   ARM Code       8  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown                        0x0000017d   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x00000181   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x00000181   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x00000181   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x00000181   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x00000181   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x00000181   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x00000181   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x00000188   ARM Code       0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x00000188   ARM Code       0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x00000188   ARM Code       0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_li                            0x00000190   ARM Code       0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_postsh_1                      0x00000190   ARM Code       0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    __rt_entry_main                          0x00000194   ARM Code       0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x00000194   ARM Code       0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    Inline Thumb to ARM Veneer to __rt_exit  0x000001bd   Thumb Code     4  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit                                0x000001c0   ARM Code       0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x000001c4   ARM Code       0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x000001c4   ARM Code       0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x000001c8   ARM Code       0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    IRQ_Exception                            0x000001d0   ARM Code       8  target.o(.text)
    FIQ_Exception                            0x000001d8   ARM Code       8  target.o(.text)
    Timer0_Exception                         0x000001e0   ARM Code      36  target.o(.text)
    Timer0Init                               0x00000204   ARM Code      48  target.o(.text)
    VICInit                                  0x00000234   ARM Code      48  target.o(.text)
    TargetInit                               0x00000264   ARM Code      36  target.o(.text)
    TargetResetInit                          0x00000288   ARM Code     248  target.o(.text)
    UART_Init                                0x000003a0   ARM Code     132  main.o(.text)
    UART_transmit                            0x00000424   ARM Code      36  main.o(.text)
    UART_receive                             0x00000448   ARM Code      36  main.o(.text)
    UART_transmit_string                     0x0000046c   ARM Code      48  main.o(.text)
    delay_ms                                 0x0000049c   ARM Code      48  main.o(.text)
    LCD_command                              0x000004cc   ARM Code      80  main.o(.text)
    LCD_data                                 0x0000051c   ARM Code      80  main.o(.text)
    LCD_init                                 0x0000056c   ARM Code      84  main.o(.text)
    LCD_string                               0x000005c0   ARM Code      40  main.o(.text)
    Task2                                    0x000005e8   ARM Code      88  main.o(.text)
    Task1                                    0x00000640   ARM Code      76  main.o(.text)
    Task0                                    0x0000068c   ARM Code      92  main.o(.text)
    main                                     0x000006e8   ARM Code     144  main.o(.text)
    OS_TaskStat                              0x000007c4   ARM Code     216  os_core.o(.text)
    OS_TaskIdle                              0x000008e8   ARM Code      44  os_core.o(.text)
    OSInit                                   0x00000adc   ARM Code      56  os_core.o(.text)
    OSIntEnter                               0x00000b14   ARM Code      56  os_core.o(.text)
    OSIntExit                                0x00000b4c   ARM Code     244  os_core.o(.text)
    OSSchedLock                              0x00000c40   ARM Code      72  os_core.o(.text)
    OS_Sched                                 0x00000c88   ARM Code     168  os_core.o(.text)
    OSSchedUnlock                            0x00000d30   ARM Code     124  os_core.o(.text)
    OSStart                                  0x00000dac   ARM Code     132  os_core.o(.text)
    OSStatInit                               0x00000e30   ARM Code      84  os_core.o(.text)
    OSTimeTick                               0x00000e84   ARM Code     220  os_core.o(.text)
    OSVersion                                0x00000f60   ARM Code       8  os_core.o(.text)
    OS_Dummy                                 0x00000f68   ARM Code       4  os_core.o(.text)
    OS_EventTaskRdy                          0x00000f6c   ARM Code     200  os_core.o(.text)
    OS_EventTaskWait                         0x00001034   ARM Code     192  os_core.o(.text)
    OS_EventTO                               0x000010f4   ARM Code     120  os_core.o(.text)
    OS_EventWaitListInit                     0x0000116c   ARM Code      28  os_core.o(.text)
    OS_TCBInit                               0x00001188   ARM Code     336  os_core.o(.text)
    OSFlagAccept                             0x00001358   ARM Code     444  os_flag.o(.text)
    OSFlagCreate                             0x00001514   ARM Code     140  os_flag.o(.text)
    OS_FlagUnlink                            0x000015a0   ARM Code      88  os_flag.o(.text)
    OSFlagDel                                0x00001684   ARM Code     344  os_flag.o(.text)
    OSFlagPend                               0x000018bc   ARM Code     824  os_flag.o(.text)
    OSFlagPost                               0x00001bf4   ARM Code     496  os_flag.o(.text)
    OSFlagQuery                              0x00001de4   ARM Code      96  os_flag.o(.text)
    OS_FlagInit                              0x00001e44   ARM Code      76  os_flag.o(.text)
    OSMemCreate                              0x00001ea8   ARM Code     252  os_mem.o(.text)
    OSMemGet                                 0x00001fa4   ARM Code     120  os_mem.o(.text)
    OSMemPut                                 0x0000201c   ARM Code     116  os_mem.o(.text)
    OSMemQuery                               0x00002090   ARM Code     120  os_mem.o(.text)
    OS_MemInit                               0x00002108   ARM Code     116  os_mem.o(.text)
    OSQAccept                                0x00002184   ARM Code     140  os_q.o(.text)
    OSQCreate                                0x00002210   ARM Code     236  os_q.o(.text)
    OSQDel                                   0x000022fc   ARM Code     392  os_q.o(.text)
    OSQFlush                                 0x00002484   ARM Code      92  os_q.o(.text)
    OSQPend                                  0x000024e0   ARM Code     364  os_q.o(.text)
    OSQPost                                  0x0000264c   ARM Code     216  os_q.o(.text)
    OSQPostFront                             0x00002724   ARM Code     220  os_q.o(.text)
    OSQPostOpt                               0x00002800   ARM Code     328  os_q.o(.text)
    OSQQuery                                 0x00002948   ARM Code     156  os_q.o(.text)
    OS_QInit                                 0x000029e4   ARM Code      72  os_q.o(.text)
    OSTaskChangePrio                         0x00002a40   ARM Code     472  os_task.o(.text)
    OSTaskCreate                             0x00002c18   ARM Code     240  os_task.o(.text)
    OSTaskCreateExt                          0x00002d08   ARM Code     288  os_task.o(.text)
    OSTaskDel                                0x00002e28   ARM Code     516  os_task.o(.text)
    OSTaskDelReq                             0x0000302c   ARM Code     140  os_task.o(.text)
    OSTaskResume                             0x000030b8   ARM Code     200  os_task.o(.text)
    OSTaskStkChk                             0x00003180   ARM Code     196  os_task.o(.text)
    OSTaskSuspend                            0x00003244   ARM Code     244  os_task.o(.text)
    OSTaskQuery                              0x00003338   ARM Code     120  os_task.o(.text)
    OSTimeDly                                0x000033dc   ARM Code     144  os_time.o(.text)
    OSTimeDlyHMSM                            0x0000346c   ARM Code     232  os_time.o(.text)
    OSTimeDlyResume                          0x00003554   ARM Code     188  os_time.o(.text)
    OSTimeGet                                0x00003610   ARM Code      32  os_time.o(.text)
    OSTimeSet                                0x00003630   ARM Code      32  os_time.o(.text)
    OSTaskStkInit                            0x00003668   ARM Code     232  os_cpu_c.o(.text)
    SWI_Exception                            0x00003750   ARM Code     348  os_cpu_c.o(.text)
    OSStartHighRdy                           0x000038ac   ARM Code      16  os_cpu_c.o(.text)
    OSInitHookBegin                          0x000038bc   ARM Code       4  os_cpu_c.o(.text)
    OSInitHookEnd                            0x000038c0   ARM Code       4  os_cpu_c.o(.text)
    OSTaskCreateHook                         0x000038c4   ARM Code       8  os_cpu_c.o(.text)
    OSTaskDelHook                            0x000038cc   ARM Code       8  os_cpu_c.o(.text)
    OSTaskSwHook                             0x000038d4   ARM Code       4  os_cpu_c.o(.text)
    OSTaskStatHook                           0x000038d8   ARM Code       4  os_cpu_c.o(.text)
    OSTCBInitHook                            0x000038dc   ARM Code       8  os_cpu_c.o(.text)
    OSTimeTickHook                           0x000038e4   ARM Code       4  os_cpu_c.o(.text)
    OSTaskIdleHook                           0x000038e8   ARM Code       4  os_cpu_c.o(.text)
    Inline ARM to Thumb Veneer to srand      0x000038f4   ARM Code       8  rand.o(.text)
    srand                                    0x000038fd   Thumb Code    46  rand.o(.text)
    _rand_init                               0x0000392b   Thumb Code     4  rand.o(.text)
    __aeabi_memcpy4                          0x0000393c   ARM Code       0  rt_memcpy_w.o(.text)
    __aeabi_memcpy8                          0x0000393c   ARM Code       0  rt_memcpy_w.o(.text)
    __rt_memcpy_w                            0x0000393c   ARM Code     100  rt_memcpy_w.o(.text)
    _memcpy_lastbytes_aligned                0x00003988   ARM Code       0  rt_memcpy_w.o(.text)
    __aeabi_memclr4                          0x000039a0   ARM Code       0  rt_memclr_w.o(.text)
    __aeabi_memclr8                          0x000039a0   ARM Code       0  rt_memclr_w.o(.text)
    __rt_memclr_w                            0x000039a0   ARM Code      84  rt_memclr_w.o(.text)
    _memset_w                                0x000039a4   ARM Code       0  rt_memclr_w.o(.text)
    __aeabi_idiv                             0x000039f4   ARM Code       0  aeabi_sdiv.o(.text)
    __aeabi_idivmod                          0x000039f4   ARM Code     384  aeabi_sdiv.o(.text)
    __user_setup_stackheap                   0x00003b74   ARM Code      96  sys_stackheap_outer.o(.text)
    exit                                     0x00003bd5   Thumb Code    20  exit.o(.text)
    __user_libspace                          0x00003be8   ARM Code      12  libspace.o(.text)
    __user_perproc_libspace                  0x00003be8   ARM Code       0  libspace.o(.text)
    __user_perthread_libspace                0x00003be8   ARM Code       0  libspace.o(.text)
    __I$use$semihosting                      0x00003bf4   ARM Code       0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x00003bf4   ARM Code       4  use_no_semi.o(.text)
    Inline ARM to Thumb Veneer to _sys_exit  0x00003bf8   ARM Code       8  sys_exit.o(.text)
    __semihosting_library_function           0x00003bf8   ARM Code       0  indicate_semi.o(.text)
    _sys_exit                                0x00003c01   Thumb Code     8  sys_exit.o(.text)
    __aeabi_uidiv                            0x00003c0c   ARM Code       0  aeabi_sdiv.o(.text_udiv)
    __aeabi_uidivmod                         0x00003c0c   ARM Code      36  aeabi_sdiv.o(.text_udiv)
    IRQ_Handler                              0x00003c30   ARM Code       0  irq.o(IRQ)
    Timer0_Handler                           0x00003cac   ARM Code       0  irq.o(IRQ)
    SoftwareInterrupt                        0x00003d40   ARM Code       0  os_cpu_a.o(subr)
    OSIntCtxSw                               0x00003d7c   ARM Code       0  os_cpu_a.o(subr)
    __OSStartHighRdy                         0x00003e10   ARM Code       0  os_cpu_a.o(subr)
    OSMapTbl                                 0x00003e50   Data           8  os_core.o(.constdata)
    OSUnMapTbl                               0x00003e58   Data         256  os_core.o(.constdata)
    Region$$Table$$Base                      0x00003f58   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x00003f78   Number         0  anon$$obj.o(Region$$Table)
    OSCtxSwCtr                               0x40000000   Data           4  os_core.o(.data)
    OSEventFreeList                          0x40000004   Data           4  os_core.o(.data)
    OSFlagFreeList                           0x40000008   Data           4  os_core.o(.data)
    OSCPUUsage                               0x4000000c   Data           1  os_core.o(.data)
    OSIdleCtrMax                             0x40000010   Data           4  os_core.o(.data)
    OSIdleCtrRun                             0x40000014   Data           4  os_core.o(.data)
    OSStatRdy                                0x40000018   Data           1  os_core.o(.data)
    OSIntNesting                             0x40000019   Data           1  os_core.o(.data)
    OSIntExitY                               0x4000001a   Data           1  os_core.o(.data)
    OSLockNesting                            0x4000001b   Data           1  os_core.o(.data)
    OSPrioCur                                0x4000001c   Data           1  os_core.o(.data)
    OSPrioHighRdy                            0x4000001d   Data           1  os_core.o(.data)
    OSRdyGrp                                 0x4000001e   Data           1  os_core.o(.data)
    OSRdyTbl                                 0x4000001f   Data           2  os_core.o(.data)
    OSRunning                                0x40000021   Data           1  os_core.o(.data)
    OSTaskCtr                                0x40000022   Data           1  os_core.o(.data)
    OSIdleCtr                                0x40000024   Data           4  os_core.o(.data)
    OSTCBCur                                 0x40000028   Data           4  os_core.o(.data)
    OSTCBFreeList                            0x4000002c   Data           4  os_core.o(.data)
    OSTCBHighRdy                             0x40000030   Data           4  os_core.o(.data)
    OSTCBList                                0x40000034   Data           4  os_core.o(.data)
    OSMemFreeList                            0x40000038   Data           4  os_core.o(.data)
    OSQFreeList                              0x4000003c   Data           4  os_core.o(.data)
    OSTime                                   0x40000040   Data           4  os_core.o(.data)
    OsEnterSum                               0x40000044   Data           4  os_cpu_c.o(.data)
    TaskStk0                                 0x40000048   Data         400  main.o(.bss)
    TaskStk1                                 0x400001d8   Data         400  main.o(.bss)
    TaskStk2                                 0x40000368   Data         400  main.o(.bss)
    OSEventTbl                               0x400004f8   Data          24  os_core.o(.bss)
    OSFlagTbl                                0x40000510   Data          60  os_core.o(.bss)
    OSTaskStatStk                            0x4000054c   Data        2048  os_core.o(.bss)
    OSTaskIdleStk                            0x40000d4c   Data        2048  os_core.o(.bss)
    OSTCBPrioTbl                             0x4000154c   Data          52  os_core.o(.bss)
    OSTCBTbl                                 0x40001580   Data         676  os_core.o(.bss)
    OSMemTbl                                 0x40001824   Data         100  os_core.o(.bss)
    OSQTbl                                   0x40001888   Data          48  os_core.o(.bss)
    _random_number_data                      0x400018b8   Data         228  rand.o(.bss)
    __libspace_start                         0x4000199c   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x400019fc   Data           0  libspace.o(.bss)
    bottom_of_heap                           0x40001b9c   Data           1  startup.o(Heap)
    StackUsr                                 0x40002000   Data           1  startup.o(Stacks)



==============================================================================

Memory Map of the image

  Image Entry point : 0x000000c0

  Load Region ROM_LOAD (Base: 0x00000000, Size: 0x00003fc0, Max: 0xffffffff, ABSOLUTE)

    Execution Region ROM_EXEC (Base: 0x00000000, Size: 0x00003f78, Max: 0xffffffff, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x000000c0   Code   RO           93    vectors             startup.o
    0x000000c0   0x00000008   Code   RO          297  * !!!main             c_t.l(__main.o)
    0x000000c8   0x0000003c   Code   RO          460    !!!scatter          c_t.l(__scatter.o)
    0x00000104   0x00000028   Code   RO          462    !!handler_copy      c_t.l(__scatter_copy.o)
    0x0000012c   0x0000002c   Code   RO          464    !!handler_zi        c_t.l(__scatter_zi.o)
    0x00000158   0x00000008   Ven    RO          381    .ARM.Collect$$libinit$$00000000  c_t.l(libinit.o)
    0x00000160   0x00000002   Code   RO          381    .ARM.Collect$$libinit$$00000000  c_t.l(libinit.o)
    0x00000162   0x00000000   Code   RO          305    .ARM.Collect$$libinit$$00000002  c_t.l(libinit2.o)
    0x00000162   0x00000000   Code   RO          307    .ARM.Collect$$libinit$$00000004  c_t.l(libinit2.o)
    0x00000162   0x00000000   Code   RO          310    .ARM.Collect$$libinit$$0000000A  c_t.l(libinit2.o)
    0x00000162   0x00000000   Code   RO          312    .ARM.Collect$$libinit$$0000000C  c_t.l(libinit2.o)
    0x00000162   0x00000004   Code   RO          313    .ARM.Collect$$libinit$$0000000D  c_t.l(libinit2.o)
    0x00000166   0x00000000   Code   RO          314    .ARM.Collect$$libinit$$0000000E  c_t.l(libinit2.o)
    0x00000166   0x00000000   Code   RO          317    .ARM.Collect$$libinit$$00000011  c_t.l(libinit2.o)
    0x00000166   0x00000000   Code   RO          319    .ARM.Collect$$libinit$$00000013  c_t.l(libinit2.o)
    0x00000166   0x00000000   Code   RO          321    .ARM.Collect$$libinit$$00000015  c_t.l(libinit2.o)
    0x00000166   0x00000000   Code   RO          323    .ARM.Collect$$libinit$$00000017  c_t.l(libinit2.o)
    0x00000166   0x00000000   Code   RO          325    .ARM.Collect$$libinit$$00000019  c_t.l(libinit2.o)
    0x00000166   0x00000000   Code   RO          327    .ARM.Collect$$libinit$$0000001B  c_t.l(libinit2.o)
    0x00000166   0x00000000   Code   RO          329    .ARM.Collect$$libinit$$0000001D  c_t.l(libinit2.o)
    0x00000166   0x00000000   Code   RO          331    .ARM.Collect$$libinit$$0000001F  c_t.l(libinit2.o)
    0x00000166   0x00000000   Code   RO          333    .ARM.Collect$$libinit$$00000021  c_t.l(libinit2.o)
    0x00000166   0x00000000   Code   RO          335    .ARM.Collect$$libinit$$00000023  c_t.l(libinit2.o)
    0x00000166   0x00000000   Code   RO          337    .ARM.Collect$$libinit$$00000025  c_t.l(libinit2.o)
    0x00000166   0x00000000   Code   RO          341    .ARM.Collect$$libinit$$0000002C  c_t.l(libinit2.o)
    0x00000166   0x00000000   Code   RO          343    .ARM.Collect$$libinit$$0000002E  c_t.l(libinit2.o)
    0x00000166   0x00000000   Code   RO          345    .ARM.Collect$$libinit$$00000030  c_t.l(libinit2.o)
    0x00000166   0x00000000   Code   RO          347    .ARM.Collect$$libinit$$00000032  c_t.l(libinit2.o)
    0x00000166   0x0000000c   Code   RO          348    .ARM.Collect$$libinit$$00000033  c_t.l(libinit2.o)
    0x00000172   0x00000002   PAD
    0x00000174   0x00000008   Ven    RO          421    .ARM.Collect$$libshutdown$$00000000  c_t.l(libshutdown.o)
    0x0000017c   0x00000004   Code   RO          421    .ARM.Collect$$libshutdown$$00000000  c_t.l(libshutdown.o)
    0x00000180   0x00000000   Code   RO          427    .ARM.Collect$$libshutdown$$00000002  c_t.l(libshutdown2.o)
    0x00000180   0x00000000   Code   RO          429    .ARM.Collect$$libshutdown$$00000004  c_t.l(libshutdown2.o)
    0x00000180   0x00000000   Code   RO          432    .ARM.Collect$$libshutdown$$00000007  c_t.l(libshutdown2.o)
    0x00000180   0x00000000   Code   RO          435    .ARM.Collect$$libshutdown$$0000000A  c_t.l(libshutdown2.o)
    0x00000180   0x00000000   Code   RO          437    .ARM.Collect$$libshutdown$$0000000C  c_t.l(libshutdown2.o)
    0x00000180   0x00000000   Code   RO          440    .ARM.Collect$$libshutdown$$0000000F  c_t.l(libshutdown2.o)
    0x00000180   0x00000006   Code   RO          441    .ARM.Collect$$libshutdown$$00000010  c_t.l(libshutdown2.o)
    0x00000186   0x00000002   PAD
    0x00000188   0x00000000   Code   RO          299    .ARM.Collect$$rtentry$$00000000  c_t.l(__rtentry.o)
    0x00000188   0x00000000   Code   RO          350    .ARM.Collect$$rtentry$$00000002  c_t.l(__rtentry2.o)
    0x00000188   0x00000008   Code   RO          362    .ARM.Collect$$rtentry$$00000004  c_t.l(__rtentry4.o)
    0x00000190   0x00000000   Code   RO          352    .ARM.Collect$$rtentry$$00000009  c_t.l(__rtentry2.o)
    0x00000190   0x00000004   Code   RO          353    .ARM.Collect$$rtentry$$0000000A  c_t.l(__rtentry2.o)
    0x00000194   0x00000000   Code   RO          355    .ARM.Collect$$rtentry$$0000000C  c_t.l(__rtentry2.o)
    0x00000194   0x00000028   Code   RO          356    .ARM.Collect$$rtentry$$0000000D  c_t.l(__rtentry2.o)
    0x000001bc   0x00000004   Ven    RO          387    .ARM.Collect$$rtexit$$00000000  c_t.l(rtexit.o)
    0x000001c0   0x00000004   Code   RO          387    .ARM.Collect$$rtexit$$00000000  c_t.l(rtexit.o)
    0x000001c4   0x00000000   Code   RO          399    .ARM.Collect$$rtexit$$00000002  c_t.l(rtexit2.o)
    0x000001c4   0x00000004   Code   RO          400    .ARM.Collect$$rtexit$$00000003  c_t.l(rtexit2.o)
    0x000001c8   0x00000008   Code   RO          401    .ARM.Collect$$rtexit$$00000004  c_t.l(rtexit2.o)
    0x000001d0   0x000001d0   Code   RO            1    .text               target.o
    0x000003a0   0x00000424   Code   RO           65    .text               main.o
    0x000007c4   0x00000b94   Code   RO           99    .text               os_core.o
    0x00001358   0x00000b50   Code   RO          129    .text               os_flag.o
    0x00001ea8   0x000002dc   Code   RO          157    .text               os_mem.o
    0x00002184   0x000008bc   Code   RO          181    .text               os_q.o
    0x00002a40   0x0000099c   Code   RO          205    .text               os_task.o
    0x000033dc   0x0000028c   Code   RO          217    .text               os_time.o
    0x00003668   0x0000028c   Code   RO          229    .text               os_cpu_c.o
    0x000038f4   0x00000008   Ven    RO          273    .text               c_t.l(rand.o)
    0x000038fc   0x00000040   Code   RO          273    .text               c_t.l(rand.o)
    0x0000393c   0x00000064   Code   RO          277    .text               c_t.l(rt_memcpy_w.o)
    0x000039a0   0x00000054   Code   RO          279    .text               c_t.l(rt_memclr_w.o)
    0x000039f4   0x00000180   Code   RO          281    .text               c_t.l(aeabi_sdiv.o)
    0x00003b74   0x00000060   Code   RO          368    .text               c_t.l(sys_stackheap_outer.o)
    0x00003bd4   0x00000014   Code   RO          370    .text               c_t.l(exit.o)
    0x00003be8   0x0000000c   Code   RO          384    .text               c_t.l(libspace.o)
    0x00003bf4   0x00000004   Code   RO          395    .text               c_t.l(use_no_semi.o)
    0x00003bf8   0x00000000   Code   RO          397    .text               c_t.l(indicate_semi.o)
    0x00003bf8   0x00000008   Ven    RO          411    .text               c_t.l(sys_exit.o)
    0x00003c00   0x0000000c   Code   RO          411    .text               c_t.l(sys_exit.o)
    0x00003c0c   0x00000024   Code   RO          282    .text_udiv          c_t.l(aeabi_sdiv.o)
    0x00003c30   0x00000110   Code   RO           89    IRQ                 irq.o
    0x00003d40   0x00000110   Code   RO          266    subr                os_cpu_a.o
    0x00003e50   0x00000108   Data   RO          101    .constdata          os_core.o
    0x00003f58   0x00000020   Data   RO          458    Region$$Table       anon$$obj.o


    Execution Region IRAM (Base: 0x40000000, Size: 0x00001b9c, Max: 0xffffffff, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x40000000   0x00000044   Data   RW          102    .data               os_core.o
    0x40000044   0x00000004   Data   RW          230    .data               os_cpu_c.o
    0x40000048   0x000004b0   Zero   RW           66    .bss                main.o
    0x400004f8   0x000013c0   Zero   RW          100    .bss                os_core.o
    0x400018b8   0x000000e4   Zero   RW          274    .bss                c_t.l(rand.o)
    0x4000199c   0x00000060   Zero   RW          385    .bss                c_t.l(libspace.o)
    0x400019fc   0x00000120   Zero   RW           94    MyStacks            startup.o
    0x40001b1c   0x00000080   Zero   RW          267    SWIStacks           os_cpu_a.o


    Execution Region HEAP (Base: 0x40001b9c, Size: 0x00000004, Max: 0xffffffff, ABSOLUTE, UNINIT)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x40001b9c   0x00000001   Zero   RW           95    Heap                startup.o


    Execution Region STACKS (Base: 0x40002000, Size: 0x00000004, Max: 0xffffffff, ABSOLUTE, UNINIT)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x40002000   0x00000001   Zero   RW           96    Stacks              startup.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       272         24          0          0          0        280   irq.o
      1060         76          0          0       1200       3542   main.o
      2964        128        264         68       5056      13694   os_core.o
       272         36          0          0        128        324   os_cpu_a.o
       652          8          0          4          0      10498   os_cpu_c.o
      2896         24          0          0          0      11353   os_flag.o
       732          8          0          0          0       2518   os_mem.o
      2236         20          0          0          0       4928   os_q.o
      2460         44          0          0          0       5343   os_task.o
       652         24          0          0          0       1834   os_time.o
       192         60          0          0        290        316   startup.o
       464         32          0          0          0       3522   target.o

    ----------------------------------------------------------------------
     14852        484        296         72       6680      58152   Object Totals
         0          0         32          0          0          0   (incl. Generated)
         0          0          0          0          6          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        44          4          0          0          0          0   __rtentry2.o
         8          0          0          0          0          0   __rtentry4.o
        60          8          0          0          0          0   __scatter.o
        40          0          0          0          0          0   __scatter_copy.o
        44          0          0          0          0          0   __scatter_zi.o
       420          0          0          0          0        148   aeabi_sdiv.o
        20          0          0          0          0         80   exit.o
         0          0          0          0          0          0   indicate_semi.o
        10          0          0          0          0          0   libinit.o
        16          0          0          0          0          0   libinit2.o
        12          0          0          0          0          0   libshutdown.o
         6          0          0          0          0          0   libshutdown2.o
        12          4          0          0         96         68   libspace.o
        72         14          0          0        228         88   rand.o
        84          0          0          0          0         80   rt_memclr_w.o
       100          0          0          0          0         80   rt_memcpy_w.o
         8          0          0          0          0          0   rtexit.o
        12          0          0          0          0          0   rtexit2.o
        20          4          0          0          0         60   sys_exit.o
        96          0          0          0          0         80   sys_stackheap_outer.o
         4          0          0          0          0         68   use_no_semi.o

    ----------------------------------------------------------------------
      1100         34          0          0        324        820   Library Totals
         4          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      1096         34          0          0        324        820   c_t.l

    ----------------------------------------------------------------------
      1100         34          0          0        324        820   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     15952        518        296         72       7004      57996   Grand Totals
     15952        518        296         72       7004      57996   ELF Image Totals
     15952        518        296         72          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                16248 (  15.87kB)
    Total RW  Size (RW Data + ZI Data)              7076 (   6.91kB)
    Total ROM Size (Code + RO Data + RW Data)      16320 (  15.94kB)

==============================================================================

